name: Lint & Test

on: pull_request

concurrency:
  group: ${{ github.head_ref }}-lint-and-test
  cancel-in-progress: true

jobs:
  test_ubuntu:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: ⬇️ Checkout repository code
        uses: actions/checkout@v3

      - uses: actions/cache/restore@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}
          restore-keys: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - uses: actions/cache/restore@v4
        id: jest-cache
        with:
          path: 'jest-cache'
          key: ${{ runner.os }}-jest

      - name: 🏎️ Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: 🧪 Run tests and collect coverage based on HEAD
        run:
          yarn test --silent --ci --coverage --json --outputFile=coverage/report.json --testLocationInResults
          --max-workers ${{ steps.cpu-cores.outputs.count }}
  
  test_ubuntu_64:
    runs-on: ubuntu-24.04-arm
    env:
      GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: ⬇️ Checkout repository code
        uses: actions/checkout@v3

      - uses: actions/cache/restore@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}
          restore-keys: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - uses: actions/cache/restore@v4
        id: jest-cache
        with:
          path: 'jest-cache'
          key: ${{ runner.os }}-jest

      - name: 🏎️ Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: 🧪 Run tests and collect coverage based on HEAD
        run:
          yarn test --silent --ci --coverage --json --outputFile=coverage/report.json --testLocationInResults
          --max-workers ${{ steps.cpu-cores.outputs.count }}

  test_mac_64:
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: ⬇️ Checkout repository code
        uses: actions/checkout@v3

      - uses: actions/cache/restore@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}
          restore-keys: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock','**/*.patch') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline

      - uses: actions/cache/restore@v4
        id: jest-cache
        with:
          path: 'jest-cache'
          key: ${{ runner.os }}-jest

      - name: 🏎️ Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: 🧪 Run tests and collect coverage based on HEAD
        run:
          yarn test --silent --ci --coverage --json --outputFile=coverage/report.json --testLocationInResults
          --max-workers ${{ steps.cpu-cores.outputs.count }}